name: deploy
on:
  push:
    branches:
      - 'main'
jobs:
  build-roger:
    name: Build Roger
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout 
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Change directory to roger
        run: cd python/roger
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./python/roger
          file: ./python/roger/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/roger:roger
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/roger:cache-roger
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/roger:cache-roger,mode=max
  build-jimmy:
    name: Build Jimmy
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout 
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./python/jimmy
          file: ./python/jimmy/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/roger:jimmy
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/roger:cache-jimmy
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/roger:cache-jimmy,mode=max
  redeploy:
    name: Redeploy bots
    runs-on: ubuntu-latest
    needs: [build-roger, build-jimmy]
    steps:
    - name: Restarting docker images for bots
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_ADMIN_USER }}
        password: ${{ secrets.SERVER_ADMIN_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd ../../opt
          echo ${{ secrets.SERVER_ADMIN_PASSWORD }} | sudo -S sh redeploy.sh ${{ secrets.DOPPLER_TOKEN }}