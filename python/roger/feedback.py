from aiogram import types
from aiogram.dispatcher import FSMContext
from keyboards import feedback_keyboard
from aiogram.types import ParseMode

from database import get_database
from states import Recording
from common import delete_keyboard
from config import dp, bot

#–ø–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç–µ–π—Ç –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
async def feedback_start(message: types.Message):
    await bot.send_message(message.chat.id, 
                          "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Ñ–∏–¥–±–µ–∫–∞?\n–ï—Å–ª–∏ —Ç—ã –ø–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∏–¥–±–µ–∫, –ø—Ä–æ—Å—Ç–æ –Ω–µ –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", parse_mode=ParseMode.MARKDOWN, reply_markup = feedback_keyboard)

@dp.callback_query_handler(lambda c: c.data == 'feedback_start')
async def rate_stata_handler_week2(callback_query: types.CallbackQuery):
    await callback_query.answer("–ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    await feedback_getting(callback_query.from_user.id, callback_query.message.message_id)

async def feedback_getting(chat_id: int, message_id: int):
    await delete_keyboard(chat_id, message_id)
    await bot.send_message(chat_id, 
                          "–û—Ç–ø—Ä–∞–≤—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ) ‚Äî –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º")
    await Recording.AwaitForAFeedback.set()

#–ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω–∞–º
async def feedback_get_text_from_user(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    collection_name = get_database()
    #–ø–æ–∏—Å–∫ –Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    user = collection_name["users"].find_one(
        {'telegram_id': str(message.chat.id)}, {'telegram_username': 1})
    #–ø–æ–∏—Å–∫ –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–¥–±–µ–∫–∞
    admins = collection_name["users"].find({"is_admin": True, "is_active": True}, 
        {'_id': 0, 'telegram_id': 1})
    #–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
    for id in admins:
        await bot.send_message(id["telegram_id"], 
            "–ù–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + user['telegram_username'] + ' –∏–∑ RogerMentalBot. –í–æ—Ç, —á—Ç–æ –æ–Ω –ø–∏—à–µ—Ç: \n\n"' + message.text + '"')
    await bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —É–ª–µ—Ç–µ–ª–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º. –°–ø–∞—Å–∏–±–æ! üòç")
    collection_name['users'].find().close()    
    await state.finish()

#–ø–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω–∞–º
async def feedback_get_photo_from_user(message: types.Message, state: FSMContext):
    collection_name = get_database()
    #–ø–æ–∏—Å–∫ –Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    user = collection_name["users"].find_one(
        {'telegram_id': str(message.chat.id)}, {'telegram_username': 1})
    #–ø–æ–∏—Å–∫ –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–¥–±–µ–∫–∞
    admins = collection_name["users"].find({"is_admin": True, "is_active": True}, 
        {'_id': 0, 'telegram_id': 1})
    #–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
    for id in admins:
        await bot.send_message(id['telegram_id'], 
            "–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + user['telegram_username'] + '. –í–æ—Ç –æ–Ω–æ:')
        await bot.send_photo(id['telegram_id'], photo=message.photo[-1].file_id)
    await bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —É–ª–µ—Ç–µ–ª–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º. –°–ø–∞—Å–∏–±–æ! üòç")
    collection_name['users'].find().close()    
    await state.finish()
