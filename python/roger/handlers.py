"""Module for rate message handler."""

from aiogram import types
from pymongo.errors import PyMongoError

from db.rate import insert_new_rate
from db.user_messages import get_user_message_by_tg_message
from variables import botClient
from common import delete_keyboard
from amplitude_utils import amplitude_send_default_source_event


async def rate_message(callback_query: types.CallbackQuery, rate: bool):
    """
    Handler for rate message callback

    Parameters:
    callback_query (TG Callback): callback to handle
    rate (bool): rate to write in DB

    Returns:
    None
    """

    await delete_keyboard(callback_query.from_user.id, callback_query.message.message_id)

    try:
        message_to_update = get_user_message_by_tg_message(
            callback_query.message.message_id)

        print("\n")
        print("RATE -> —Ç—ã –æ—Ü–µ–Ω–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print(message_to_update)
        print(rate)

        insert_new_rate(
            message_to_update["id_user"],
            message_to_update["id_message"],
            rate,
        )
        print("written")
        await callback_query.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É ‚ù§Ô∏è")
    except PyMongoError:
        await botClient.send_message(
            callback_query.from_user.id,
            (
                "–û–π, –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòû \n"
                "–ü–æ–≤—Ç–æ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏–ª–∏ "
                "–Ω–∞–ø–∏—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /feedback"
            )
        )
        await amplitude_send_default_source_event("Error",
                                                  str(callback_query.from_user.id),
                                                  "rate_message",
                                                  "PyMongoError")
