import datetime
from aiogram import types, dispatcher

from states import Registration
from config import botClient

# –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–π–º–∑–æ–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


async def get_user_timezone(chat_id: int):
    await botClient.send_message(chat_id, "–ï—â–µ –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å, —á—Ç–æ–±—ã –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ \n–ù–∞–ø–∏—à–∏, —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ê–°–´:–ú–ò–ù–£–¢–´")
    await Registration.AwaitForATimeZoneToSend.set()


async def customer_timezone(message: types.Message, state: dispatcher.FSMContext):
    await state.update_data(name=message.text)
    user_current_time = message.text
    try:
        s = user_current_time.split(":")
        if (s[0].isdigit() == False or s[1].isdigit() == False):
            raise Exception("–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –≤—Ä–µ–º—è")
        if (int(s[0]) < 0 or int(s[0]) > 23 or int(s[1]) < 0 or int(s[1]) > 59):
            raise Exception("–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –≤—Ä–µ–º—è")
    except:
        await botClient.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, —Ç—ã –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ üôÉ \n–ù–∞–ø–∏—à–∏, —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ê–°–´:–ú–ò–ù–£–¢–´")
        await Registration.AwaitForATimeZoneToSend.set()
        return

    time_now_utc = datetime.datetime.now(datetime.timezone.utc)
    time_zone1 = int(s[0])-time_now_utc.hour
    time_zone2 = time_now_utc.hour-int(s[0])
    if (time_zone1 < 0):
        time_zone1 = time_zone1+24
    if (abs(time_zone1) <= abs(time_zone2) and time_zone1 < 10):
        time_zone = "+0" + str(abs(time_zone1))
    elif (abs(time_zone1) <= abs(time_zone2) and time_zone1 >= 10):
        time_zone = "+" + str(abs(time_zone1))
    elif (abs(time_zone1) > abs(time_zone2) and time_zone2 < 10):
        time_zone = "-0" + str(abs(time_zone2))
    else:
        time_zone = "-" + str(abs(time_zone2))
    await state.finish()
    return time_zone
