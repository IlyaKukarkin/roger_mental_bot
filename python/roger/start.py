"""Module providing functions for /start command."""

import time
from aiogram import types
from bson import ObjectId

from db.users import get_user_by_telegram_id, update_user_is_active, insert_new_empty_user
from states import Registration
from keyboards import ask_for_name_kb
from variables import botClient, botDispatcher


async def start_command(message: types.Message):
    """
    Message handler for /start command

    Parameters:
    message (TG Message): message to handle

    Returns:
    None
    """

    user = get_user_by_telegram_id(str(message.chat.id))

    if user is None:
        form_id = ObjectId()
        if message.from_user.username is None:
            message.from_user.username = ""
        user_id = insert_new_empty_user(
            message.from_user.username, str(
                message.chat.id), form_id)
        await botClient.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç üëã \n \n–Ø –†–æ–¥–∂–µ—Ä ‚Äî –±–æ—Ç –¥–ª—è —Ç–≤–æ–µ–π –∫—É–∫—É—Ö–∏."
        )
        time.sleep(1)

        await botClient.send_message(
            message.chat.id,
            "–ö–∞–∂–¥—ã–π –≤–µ—á–µ—Ä —è –±—É–¥—É –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è —Ç–≤–æ–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º.\n"
            "–Ø —É–º–µ—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å 4 –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:\n\n"
            "üü¢ ‚Äî –¥–µ–Ω—å –±—ã–ª –≤–µ–ª–∏–∫–æ–ª–µ–ø–µ–Ω, –ª—É—á—à–µ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–µ–ª—å–∑—è\n"
            "üü° ‚Äî –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏\n"
            "üü† ‚Äî –¥–µ–Ω—å –º–æ–≥ –±—ã –±—ã—Ç—å —Å–∏–ª—å–Ω–æ –ª—É—á—à–µ, –Ω–æ –µ—â–µ –Ω–µ –≤—Å–µ –ø–æ—Ç–µ—Ä—è–Ω–æ\n"
            "üî¥ ‚Äî –¥–µ–Ω—å –±—ã–ª —Ö—É–∂–µ –Ω–µ–∫—É–¥–∞, —Ç–µ–±–µ —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
        )
        time.sleep(6)

        await botClient.send_message(
            message.chat.id,
            (
                "–ï—Å–ª–∏ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å üü† –∏ üî¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —Ç–æ–≥–¥–∞ –∏ –Ω–∞—á–Ω–µ—Ç—Å—è —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ üôÉ \n"
                "–Ø –ø–æ–¥–±–µ—Ä—É —Ç–µ–±–µ –æ–±–æ–¥—Ä—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, "
                "—É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ª–∏—á–Ω—ã–º ‚Äî –∏ –æ–Ω –∑–∞—Ö–æ—Ç–µ–ª –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–º —Å —Ç–æ–±–æ–π"
            )
        )
        time.sleep(5)

        await botClient.send_message(
            message.chat.id,
            (
                "–ò –Ω–∞–æ–±–æ—Ä–æ—Ç ‚Äî –µ—Å–ª–∏ —É —Ç–µ–±—è –≤—ã–¥–∞–ª—Å—è üü¢ –∏ üü° –¥–µ–Ω—å, "
                "—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.  \n"
                "–ö–æ–≥–¥–∞ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–π–¥–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é, —è –±—É–¥—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –µ–≥–æ —Ç–µ–º, "
                "–∫–æ–º—É —ç—Ç–æ —Å–µ–π—á–∞—Å –≤–∞–∂–Ω–æ"
            )
        )
        time.sleep(5)

        await botClient.send_message(
            message.chat.id,
            "–í–æ—Ç —Ç–∞–∫–∞—è –ø—Ä–æ—Å—Ç–∞—è –º–∞–≥–∏—è ‚ú®"
        )
        time.sleep(3)

        await botClient.send_message(
            message.chat.id,
            (
                "–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å —Ç–æ–±–æ–π –ø–æ–±–ª–∏–∂–µ! –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π ‚Äî "
                "—Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–∑–¥–Ω–µ–µ üôÉ"
            )
        )
        time.sleep(2)

        await botClient.send_message(
            message.chat.id,
            (
                "–¢–µ–±—è –∑–æ–≤—É—Ç " + message.from_user.first_name +
                "? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–≤–æ–µ –∏–º—è –∏–ª–∏ –≤–≤–µ–¥–∏ –¥—Ä—É–≥–æ–µ"
            ),
            reply_markup=ask_for_name_kb
        )

        await Registration.Name.set()
        state = botDispatcher.get_current().current_state()
        await state.update_data(user_id=user_id, source="reg")
        return

    if user["is_active"]:
        await botClient.send_message(
            message.chat.id,
            "–ö–∞–∂–µ—Ç—Å—è, –º—ã —É–∂–µ –∑–Ω–∞–∫–æ–º—ã, " + user['name']
        )
        return

    # —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–µ–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏; –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ
    # –∑–∞—Ä–µ–≥–∞–ª—Å—è
    if hasattr(user, "timezone"):
        await botClient.send_message(
            message.chat.id,
            "–ó–¥–æ—Ä–æ–≤–æ, —á—Ç–æ —Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è, " +
            user['name'] + " üòç\n\n–Ø –ø—Ä–æ–¥–æ–ª–∂—É –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è —Ç–≤–æ–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º üòå"
        )
        update_user_is_active(user['_id'], True)
        return

    await botClient.send_message(
        message.chat.id,
        "–¢—ã —É–∂–µ –Ω–∞—á–∞–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n\n–ó–∞–≤–µ—Ä—à–∏ –µ–µ —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ —Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è,"
        "–∞ –ø–æ—Ç–æ–º —è –Ω–∞—á–Ω—É –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è —Ç–≤–æ–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–µ–±—è üòå"
    )
